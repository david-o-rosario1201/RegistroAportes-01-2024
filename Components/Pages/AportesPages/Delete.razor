@page "/DeleteAportes"
@page "/DeleteAportes/aporteid={aporteId:int}"
@inject AportesService aportesService
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject NavigationManager navigation
@inject ToastService toastService

<PageTitle>Eliminar Aporte</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header">
			<h3><strong>Eliminar Aporte</strong></h3>
		</div>
		@*Body*@
		<div class="card-body col-5">
			<h3><strong>¿Est&aacute;s seguro de que quieres eliminar este aporte?</strong></h3>
			@*Datos*@
			<div class="mb-1">
				<p class="mb-0">Aporte Id: @aporte.AporteId</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Fecha: @aporte.Fecha.ToShortDateString()</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Persona: @aporte.Persona</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Observaci&oacute;n: @aporte.Observacion</p>
			</div>
			<div class="mb-1">
				<p class="mb-0">Monto: @aporte.Monto.ToString("N2")</p>
			</div>
		</div>
		@*Footer*@
		<div class="card-footer d-flex justify-content-center">
			<div class="px-2">
				<button type="button" class="btn btn-outline-dark" @onclick="Volver"><i class="bi bi-box-arrow-left" /> Volver</button>
			</div>
			<button type="button" class="btn btn-outline-danger" @onclick="Eliminar"><i class="bi bi-trash3-fill" /> Eliminar</button>
		</div>
	</div>
</div>

<Toast @ref="toastService.ToastComponent" Duration="4000" IconClass="bi bi-info-circle" Persist="true" />


@code {
	[Parameter]
	public int aporteId { get; set; }
	public Aportes aporte { get; set; } = new Aportes();

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		if (aporteId > 0)
			aporte = await aportesService.Buscar(aporteId);
	}

	public async Task Eliminar()
	{
		var eliminar = await aportesService.Eliminar(aporte);
		if (eliminar)
		{
			ShowToastSuccess();
			await Task.Delay(2000);
			Volver();
		}
		else
			ShowToastFail();
	}

	public void ShowToastSuccess() => toastService.ShowSuccessToast("Eliminar Aporte", "El aporte se eliminó con éxito");
	public void ShowToastFail() => toastService.ShowDangerToast("Eliminar Aporte", "El aporte no es ha podido eliminar correctamente");

	public void Volver()
	{
		navigation.NavigateTo("/Aportes");
	}
}
