@page "/DetailsAportes"
@page "/DetailsAportes/aporteid={aporteId:int}"

@inject AportesService aportesService
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject NavigationManager navigation

<PageTitle>Detalle Aporte</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header">
			<h3><strong>Detalle Aporte</strong></h3>
		</div>
		@*Body*@
		<div class="card-body col-5">
			<h3><strong>Informaci&oacute;n del aporte #@aporteId</strong></h3>
			@*Datos*@
			<div class="mb-1">
				<p class="mb-2"><strong>Aporte Id:</strong> @aporte.AporteId</p>
			</div>
			<div class="mb-1">
				<p class="mb-2"><strong>Fecha:</strong> @aporte.Fecha.ToShortDateString()</p>
			</div>
			<div class="mb-1">
				<p class="mb-2"><strong>Persona:</strong> @aporte.Persona</p>
			</div>
			<div class="mb-1">
				<p class="mb-2"><strong>Observaci&oacute;n:</strong> @aporte.Observacion</p>
			</div>
			<div class="mb-1">
				<p class="mb-2"><strong>Monto:</strong> @aporte.Monto.ToString("N2")</p>
			</div>
		</div>
		@*Footer*@
		<div class="card-footer d-flex justify-content-center">
			<div class="px-2">
				<button type="button" class="btn btn-outline-dark" @onclick="Volver"><i class="bi bi-box-arrow-left" /> Volver</button>
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public int aporteId { get; set; }
	public Aportes aporte { get; set; } = new Aportes();

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		if (aporteId > 0)
			aporte = await aportesService.Buscar(aporteId);
	}

	public void Volver()
	{
		navigation.NavigateTo("/Aportes");
	}
}