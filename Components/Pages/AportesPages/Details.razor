@page "/DetailsAportes"
@inject AportesService aportesService
@inject NavigationManager navigation
@rendermode InteractiveServer

<PageTitle>Detalles de Aportes</PageTitle>
<div class="container">
	<div class="card shadow-lg">
		@*Header*@
		<div class="card-header">
			<h3><strong>Detalles de Aportes</strong></h3>
			<button type="button" class="btn btn-outline-primary" @onclick="Volver">Volver</button>
		</div>
		@*Body*@
		<div class="card-body">
			@if (aportes.Count == 0)
			{
				<p><em>Cargando...</em></p>
			}
			else
			{
				<table class="table">
					<thead>
						<tr>
							<th>Aporte Id</th>
							<th>Fecha</th>
							<th>Persona</th>
							<th>Observaci&oacute;n</th>
							<th>Monto</th>
							<th>Editar</th>
							<th>Eliminar</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var aporte in aportes)
						{
							<tr>
								<td>@aporte.AporteId</td>
								<td>@aporte.Fecha</td>
								<td>@aporte.Persona</td>
								<td>@aporte.Observacion</td>
								<td>@aporte.Monto</td>
								<td><a href="/EditAportes/aporteid=@aporte.AporteId"><i class="bi bi-pencil-square"/></a></td>
								<td><a href="/DeleteAportes/aporteid=@aporte.AporteId"></a><i class="bi bi-trash3-fill"/></td>
							</tr>
						}
					</tbody>
				</table>
			}
		</div>
		@*Footer*@
		<div class="card-footer">
			<p><strong>Total de Aportes:</strong> @aportes.Count</p>
		</div>
	</div>
</div>
@code {
	public List<Aportes> aportes = new List<Aportes>();

	protected override async Task OnInitializedAsync()
	{
		await Task.Delay(500);
		Expression<Func<Aportes, bool>> criterio = a => a.AporteId > 0;
		aportes = await aportesService.Listar(criterio);
	}

	public void Volver()
	{
		navigation.NavigateTo("/Aportes");
	}
}
